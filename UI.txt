<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Robot Control</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            text-align: center;
            margin: 0;
            padding: 0;
        }
        .container {
            padding: 20px;
        }
        .button {
            width: 200px;
            height: 50px;
            margin: 10px;
            font-size: 16px;
            font-weight: bold;
            background-color: #007bff;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }
        .button:active {
            background-color: #0056b3;
        }
        .toggle-button {
            width: 200px;
            height: 50px;
            font-size: 16px;
            font-weight: bold;
            margin: 20px auto;
            background-color: #ff5722;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }
        .toggle-button.active {
            background-color: #4caf50;
        }
        .status {
            margin-top: 20px;
            font-size: 18px;
        }
        .status.connected {
            color: green;
        }
        .status.disconnected {
            color: red;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Robot Control Panel</h1>
        <button class="toggle-button" id="modeToggle" onclick="toggleMode()">Mode: Control</button>
        <div class="status" id="status">Status: Disconnected</div>
    </div>

    <script>
        let websocket;
        let currentMode = 0; // Control: 0, Follow: 1
        let stop = 0; // Emergency stop: 1 = Stop, 0 = Running
        let lx = 100, ly = 100, rx = 100, ry = 100; // Joystick default values
        const reconnectInterval = 5000;

        function connectWebSocket() {
            websocket = new WebSocket("ws://10.146.245.212:8080/ws");

            websocket.onopen = function () {
                document.getElementById('status').innerText = "Status: Connected";
                document.getElementById('status').className = "status connected";
            };

            websocket.onclose = function () {
                document.getElementById('status').innerText = "Status: Disconnected";
                document.getElementById('status').className = "status disconnected";
                setTimeout(connectWebSocket, reconnectInterval);
            };

            websocket.onerror = function (error) {
                console.error("WebSocket error:", error);
            };
        }

        function toggleMode() {
            const modeButton = document.getElementById("modeToggle");
            currentMode = currentMode === 0 ? 1 : 0;

            if (currentMode === 1) {
                modeButton.innerText = "Mode: Follow";
                modeButton.classList.add("active");
            } else {
                modeButton.innerText = "Mode: Control";
                modeButton.classList.remove("active");
            }

            sendCommand();
        }

        function updateGamepadValues() {
            const gamepads = navigator.getGamepads();
            const gamepad = gamepads[0];

            if (gamepad) {
                lx = gamepad.axes[0] * 100 + 100;
                ly = gamepad.axes[1] * -100 + 100;
                rx = gamepad.axes[2] * 100 + 100;
                ry = gamepad.axes[3] * -100 + 100;

                // Send updated joystick values
                sendCommand();
            }
        }

        function sendCommand() {
            if (websocket && websocket.readyState === WebSocket.OPEN) {
                const command = [currentMode, rx, ry, lx, ly, stop];
                websocket.send(command.join(","));
            }
        }

        function setupGamepad() {
            setInterval(updateGamepadValues, 100);
        }

        document.addEventListener('contextmenu', event => event.preventDefault());
        connectWebSocket();
        setupGamepad();
    </script>
</body>
</html>
