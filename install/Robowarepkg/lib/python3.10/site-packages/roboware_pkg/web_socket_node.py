import threading
import rclpy
from rclpy.node import Node
from std_msgs.msg import String
from fastapi import FastAPI, WebSocket
from fastapi.responses import HTMLResponse
import uvicorn
import os

app = FastAPI()

# HTMLファイルの読み込み
with open('/home/altair/Roboware/UI.txt', 'r') as f:
    html = f.read()

@app.get("/")
async def index():
    return HTMLResponse(html)

class WebSocketNode(Node):
    def __init__(self):
        super().__init__('web_socket_node')
        self.pub = self.create_publisher(String, 'web_socket_pub', 10)

        @app.websocket('/ws')
        async def websocket_endpoint(websocket: WebSocket):
            await websocket.accept()
            while True:
                try:
                    data = await websocket.receive_text()
                    self.publish_message(data)
                except Exception as e:
                    self.get_logger().info(f"WebSocket error: {str(e)}")
                    break

    def publish_message(self, message):
        msg = String()
        msg.data = message
        self.pub.publish(msg)

def start_ros2():
    rclpy.init()
    node = WebSocketNode()
    rclpy.spin(node)
    rclpy.shutdown()

def start_websocket():
    uvicorn.run(app, host="192.168.144.212", port=8080)

def main():
    threading.Thread(target=start_ros2).start()
    threading.Thread(target=start_websocket).start()

if __name__ == '__main__':
    main()
